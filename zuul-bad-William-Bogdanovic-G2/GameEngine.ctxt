#BlueJ class context
comment0.target=GameEngine
comment0.text=\r\n\ \ This\ class\ creates\ all\ rooms,\ creates\ the\ parser\ and\ starts\r\n\ \ the\ game.\ \ It\ also\ evaluates\ and\ executes\ the\ commands\ that\ \r\n\ \ the\ parser\ returns.\r\n\ \ \r\n\ @author\ BOGDANOVIC\ William\r\n\ @version\ (platformtest)\r\n
comment1.params=
comment1.target=GameEngine()
comment1.text=\r\n\ default\ constructor\ of\ GameEngine\r\n\ \r\n
comment10.params=pCommandWord
comment10.target=void\ goRoom(Command)
comment10.text=\r\n\ method\ runs\ if\ first\ command\ word\ is\ "go"\r\n\ \r\n\ @param\ pCommandWord\ to\ know\ in\ which\ room\ to\ go\ to,\ and\ keep\ in\ a\ stack\ each\ previous\ room\ for\ the\ back\ methode\r\n
comment11.params=pHasSecondWord
comment11.target=boolean\ quit(Command)
comment11.text=\r\n\ returns\ true\ to\ quit\ the\ game\ or\ false\ if\ unsure\r\n\ \r\n\ @param\ pHasSecondWord\ to\ check\ if\ the\ command\ quit\ is\ used\ correctly\ without\ a\ second\ word\r\n\ @return\ boolean\ true\ or\ false\ depending\ on\ wether\ there\ is\ a\ second\ word\ or\ not\r\n
comment12.params=pHasSecondWord
comment12.target=void\ back(Command)
comment12.text=\r\n\ backing\ to\ the\ last\ room\ if\ possible\ \r\n\ returns\ previous\ room\ when\ possible\ \ \ \ \ \r\n\ \r\n\ @param\ pHasSecondWord\ to\ check\ if\ the\ back\ command\ is\ used\ correctly\ or\ not\r\n
comment13.params=pProcessCommand
comment13.target=boolean\ processCommand(Command)
comment13.text=\r\n\ calls\ correct\ method\ depending\ on\ player's\ input\r\n\ \r\n\ @param\ pProcessCommand\ to\ run\ code\ corresponding\ to\ the\ command\r\n\ @return\ boolean\ true\ or\ false\ whether\ the\ command\ works\ not\ not\r\n
comment14.params=
comment14.target=void\ endGame()
comment14.text=\r\n\ text\ message\ when\ user\ quits\ the\ game\r\n\ disables\ the\ GUI\ instance\ to\ shut\ off\ the\ game\r\n\ \r\n
comment2.params=pUserInterface
comment2.target=void\ setGUI(UserInterface)
comment2.text=\r\n\ Initialize\ the\ graphics\ user\ interface\ and\ calls\ the\ welcome\ message\r\n\ \r\n\ @param\ pUserInterface\ to\ initialize\ GUI\r\n
comment3.params=
comment3.target=void\ printWelcome()
comment3.text=\r\n\ welcome\ text\ at\ the\ start\ of\ the\ game\r\n\ \r\n
comment4.params=
comment4.target=void\ showImageGameEngine()
comment4.text=\r\n\ to\ show\ the\ image\ of\ the\ current\ room\r\n\ \r\n
comment5.params=
comment5.target=void\ createRooms()
comment5.text=\r\n\ create\ rooms,\ items\ and\ links\ between\ each\ of\ them\r\n\ \r\n
comment6.params=pCommandLine
comment6.target=void\ interpretCommand(java.lang.String)
comment6.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ If\ this\ command\ ends\ the\ game,\ true\ is\ returned,\ otherwise\ false\ is\r\n\ returned.\r\n\ \r\n\ @param\ pCommandLine\ to\ read\ and\ the\ actions\ of\ the\ buttons\r\n
comment7.params=pCommand
comment7.target=void\ test(Command)
comment7.text=\r\n\ test\ command\ to\ run\ different\ .txt\ files\ \r\n\ test\ will\ try\ to\ read\ commands\ by\ going\ through\ each\ line\ of\ the\ .txt\r\n\ \r\n\ @param\ pCommand\ to\ be\ able\ to\ use\ the\ methodes\ that\ come\ from\ the\ class\ Command\r\n
comment8.params=
comment8.target=void\ printHelp()
comment8.text=\r\n\ help\ text\ when\ typing\ help\r\n\ \r\n
comment9.params=
comment9.target=void\ printLocationInfo()
comment9.text=\r\n\ shows\ in\ text\ format\ which\ exits\ are\ open\ and\ shows\ the\ room's\ image\r\n\ \r\n
numComments=15
